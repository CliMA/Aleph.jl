env:
  JULIA_VERSION: "1.7.1"
  MPICH_VERSION: "4.0.0"
  OPENMPI_VERSION: "4.1.1"
  CUDA_VERSION: "11.2"
  OPENBLAS_NUM_THREADS: 1
  CLIMATEMACHINE_SETTINGS_FIX_RNG_SEED: "true"
  BUILDKITE_COMMIT: "${BUILDKITE_COMMIT}"
  BUILDKITE_BRANCH: "${BUILDKITE_BRANCH}"
  JULIA_DEPOT_PATH: "${BUILDKITE_BUILD_PATH}/${BUILDKITE_PIPELINE_SLUG}/depot/cpu"

agents:
  config: cpu
  queue: central
  slurm_ntasks: 1

steps:
  - label: "init :computer:"
    key: "init_cpu_env"
    command:
      - "echo $$JULIA_DEPOT_PATH"
      - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project -e 'using Pkg; Pkg.precompile()'"
      - "julia --project -e 'using Pkg; Pkg.status()'"

      - "julia --project=test -e 'using Pkg; Pkg.develop(path = \".\")'"
      - "julia --project=test -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=test -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=test -e 'using Pkg; Pkg.status()'"

      - "julia --project=examples -e 'using Pkg; Pkg.develop(path = \".\")'"
      - "julia --project=examples -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=examples -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=examples -e 'using Pkg; Pkg.status()'"

    agents:
      slurm_cpus_per_task: 8
    env:
      JULIA_NUM_PRECOMPILE_TASKS: 8

  - wait

  - group: "ClimaAtmos src unit tests"
    steps:

      - label: ":computer: domains"
        command: "julia --color=yes --project=test test/test_domains.jl"

      - label: ":computer: models"
        command: "julia --color=yes --project=test test/test_models.jl"

  - group: "ClimaAtmos src integration tests"
    steps:

      - label: ":computer: 1d_ekman_column regression (Float32)"
        command: "julia --color=yes --project=test test/test_cases/run_1d_ekman_column.jl --FT Float32 --test_mode regression"

      - label: ":computer: 1d_ekman_column regression (Float64)"
        command: "julia --color=yes --project=test test/test_cases/run_1d_ekman_column.jl --FT Float64 --test_mode regression"

      - label: ":computer: 1d_ekman_column validation"
        command: "julia --color=yes --project=test test/test_cases/run_1d_ekman_column.jl --FT Float64 --test_mode validation"
        artifact_paths: "test/test_cases/run_1d_ekman_column/*"

      - label: ":computer: 2d_dry_bubble"
        command: "julia --color=yes --project=test test/test_cases/run_2d_dry_bubble.jl"
        artifact_paths: "test/test_cases/run_2d_dry_bubble/*"

      - label: ":computer: 2d_moist_bubble"
        command: "julia --color=yes --project=test test/test_cases/run_2d_moist_bubble.jl"
        artifact_paths: "test/test_cases/run_2d_moist_bubble/*"

      - label: ":computer: 2d_precipitating_bubble"
        command: "julia --color=yes --project=test test/test_cases/run_2d_precipitating_bubble.jl"
        artifact_paths: "test/test_cases/run_2d_precipitating_bubble/*"

      - label: ":computer: 3d_rising_bubble"
        command: "julia --color=yes --project=test test/test_cases/run_3d_rising_bubble.jl"
        artifact_paths: "test/test_cases/run_3d_rising_bubble/*"

      - label: ":computer: 3d_solid_body_rotation"
        command: "julia --color=yes --project=test test/test_cases/run_3d_solid_body_rotation.jl"
        artifact_paths: "test/test_cases/run_3d_solid_body_rotation/*"

      - label: ":computer: 3d_balanced_flow"
        command: "julia --color=yes --project=test test/test_cases/run_3d_balanced_flow.jl"
        artifact_paths: "test/test_cases/run_3d_balanced_flow/*"

      - label: ":computer: 3d_baroclinic_wave"
        command: "julia --color=yes --project=test test/test_cases/run_3d_baroclinic_wave.jl"
        artifact_paths: "test/test_cases/run_3d_baroclinic_wave/*"

  - group: "Examples"
    steps:

      - label: ":package: Single column physics - EDMF"
        command: "julia --color=yes --project=examples examples/TCexample.jl"
        artifact_paths: "examples/output/TCexample/*"

      - label: ":computer: Rising Bubble 3D hybrid (ρθ)"
        command: "julia --color=yes --project=examples examples/hybrid/box/bubble_3d_rhotheta.jl"
        artifact_paths: "examples/hybrid/box/output/bubble_3d_rhotheta/*"

      - label: ":computer: Rising Bubble 3D hybrid invariant (ρθ)"
        command: "julia --color=yes --project=examples examples/hybrid/box/bubble_3d_invariant_rhotheta.jl"
        artifact_paths: "examples/hybrid/box/output/bubble_3d_invariant_rhotheta/*"

      - label: ":computer: Rising Bubble 3D hybrid invariant (ρe)"
        command: "julia --color=yes --project=examples examples/hybrid/box/bubble_3d_invariant_rhoe.jl"
        artifact_paths: "examples/hybrid/box/output/bubble_3d_invariant_rhoe/*"

      - label: ":computer: Density current 2D hybrid invariant total energy"
        command: "julia --color=yes --project=examples examples/hybrid/plane/density_current_2dinvariant_rhoe.jl"
        artifact_paths: "examples/hybrid/plane/output/dc_invariant_etot/*"

      - label: ":computer: Density current 2D hybrid invariant potential temperature"
        command: "julia --color=yes --project=examples examples/hybrid/plane/density_current_2dinvariant_rhotheta.jl"
        artifact_paths: "examples/hybrid/plane/output/dc_rhotheta/*"

      - label: ":computer: Density current 2D hybrid conservative form potential temperature"
        command: "julia --color=yes --project=examples examples/hybrid/plane/density_current_2d_flux_form.jl"
        artifact_paths: "examples/hybrid/plane/output/dc_fluxform/*"

      - label: ":computer: MPI Rising Bubble 3D hybrid invariant (ρe)"
        command: "mpiexec julia --color=yes --project=examples examples/hybrid/box/bubble_3d_invariant_rhoe.jl"
        artifact_paths: "examples/hybrid/box/output/bubble_3d_invariant_rhoe/*"
        env:
          CLIMACORE_DISTRIBUTED: "MPI"
        agents:
          slurm_ntasks: 2

      - label: ":computer: Float64 baroclinic wave (ρe)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --TEST_NAME sphere/baroclinic_wave_rhoe"
        artifact_paths: "examples/hybrid/sphere/output/baroclinic_wave_rhoe/Float64/*"

      - label: ":computer: baroclinic wave (ρe)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --TEST_NAME sphere/baroclinic_wave_rhoe --FLOAT_TYPE Float32"
        artifact_paths: "examples/hybrid/sphere/output/baroclinic_wave_rhoe/Float32/*"

      - label: ":computer: MPI baroclinic wave (ρe)"
        command: "mpiexec julia --color=yes --project=examples examples/hybrid/driver.jl --TEST_NAME sphere/baroclinic_wave_rhoe --FLOAT_TYPE Float32"
        artifact_paths: "examples/hybrid/sphere/output/baroclinic_wave_rhoe/Float32/*"
        env:
          CLIMACORE_DISTRIBUTED: "MPI"
        agents:
          slurm_ntasks: 2

      - label: ":computer: baroclinic wave (ρθ)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --TEST_NAME sphere/baroclinic_wave_rhotheta"
        artifact_paths: "examples/hybrid/sphere/output/baroclinic_wave_rhotheta/Float64/*"

      - label: ":computer: equilibrium moisture baroclinic wave (ρe)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --TEST_NAME sphere/baroclinic_wave_rhoe_equilmoist --FLOAT_TYPE Float32"
        artifact_paths: "examples/hybrid/sphere/output/baroclinic_wave_rhoe_equilmoist/Float32/*"

      - label: ":computer: equilibrium moisture baroclinic wave (ρθ)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --TEST_NAME sphere/baroclinic_wave_rhotheta_equilmoist --FLOAT_TYPE Float32"
        artifact_paths: "examples/hybrid/sphere/output/baroclinic_wave_rhotheta_equilmoist/Float32/*"

      - label: ":computer: dry held-suarez (ρe)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --TEST_NAME sphere/held_suarez_rhoe --FLOAT_TYPE Float32"
        artifact_paths: "examples/hybrid/sphere/output/held_suarez_rhoe/Float32/*"

      - label: ":computer: Float64 dry held-suarez (ρθ)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --TEST_NAME sphere/held_suarez_rhotheta"
        artifact_paths: "examples/hybrid/sphere/output/held_suarez_rhotheta/Float64/*"

      - label: ":computer: dry held-suarez (ρθ)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --TEST_NAME sphere/held_suarez_rhotheta --FLOAT_TYPE Float32"
        artifact_paths: "examples/hybrid/sphere/output/held_suarez_rhotheta/Float32/*"

      - label: ":computer: dry held-suarez (ρe_int)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --TEST_NAME sphere/held_suarez_rhoe_int --FLOAT_TYPE Float32"
        artifact_paths: "examples/hybrid/sphere/output/held_suarez_rhoe_int/Float32/*"

      - label: ":computer: equilibrium moisture held suarez (ρe)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --TEST_NAME sphere/held_suarez_rhoe_equilmoist --FLOAT_TYPE Float32"
        artifact_paths: "examples/hybrid/sphere/output/held_suarez_rhoe_equilmoist/Float32/*"

      - label: ":computer: equilibrium moisture held suarez (ρe_int)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --TEST_NAME sphere/held_suarez_rhoe_int_equilmoist --FLOAT_TYPE Float32"
        artifact_paths: "examples/hybrid/sphere/output/held_suarez_rhoe_int_equilmoist/Float32/*"