agents:
  queue: central
  slurm_mem: 8G
  modules: julia/1.8.5 cuda/11.8 ucx/1.14.1_cuda-11.8 openmpi/4.1.5_cuda-11.8 hdf5/1.12.2-ompi415

env:
  JULIA_LOAD_PATH: "${JULIA_LOAD_PATH}:${BUILDKITE_BUILD_CHECKOUT_PATH}/.buildkite"
  OPENBLAS_NUM_THREADS: 1
  JULIA_NVTX_CALLBACKS: gc
  OMPI_MCA_opal_warn_on_missing_libcuda: 0
  JULIA_MAX_NUM_PRECOMPILE_FILES: 100
  JULIA_DEPOT_PATH: "${BUILDKITE_BUILD_PATH}/${BUILDKITE_PIPELINE_SLUG}/depot/cpu"

steps:
  - label: "init :computer:"
    key: "init_cpu_env"
    command:
      - "echo $$JULIA_DEPOT_PATH"

      - echo "--- Configure MPI"
      - julia -e 'using Pkg; Pkg.add("MPIPreferences"); using MPIPreferences; use_system_binary()'

      - echo "--- Instantiate project"
      - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project -e 'using Pkg; Pkg.precompile()'"
      - "julia --project -e 'using Pkg; Pkg.status()'"

      - echo "--- Configure CUDA"
      # force the initialization of the CUDA runtime as it is lazily loaded by default
      - "julia --project -e 'using CUDA; CUDA.precompile_runtime()'"

      - echo "--- Instantiate test"
      - "julia --project=test -e 'using Pkg; Pkg.develop(path = \".\")'"
      - "julia --project=test -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=test -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=test -e 'using Pkg; Pkg.status()'"

      - echo "--- Instantiate examples"
      - "julia --project=examples -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=examples -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=examples -e 'using Pkg; Pkg.status()'"

      - echo "--- Instantiate perf"
      - "julia --project=perf -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=perf -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=perf -e 'using Pkg; Pkg.status()'"

      - echo "--- Download artifacts"
      - "julia --project=examples artifacts/download_artifacts.jl"

    agents:
      slurm_cpus_per_task: 8
    env:
      JULIA_NUM_PRECOMPILE_TASKS: 8
      JULIA_MAX_NUM_PRECOMPILE_FILES: 50

  - wait

  - group: "Regression tests"
    steps:

      - label: ":computer: Ensure mse tables are reset when necessary"
        command: "julia --color=yes --project=examples regression_tests/test_reset.jl"

  - group: "EDMFX"
    steps:

      - label: ":genie: Diagnostic EDMFX Bomex in a box"
        command: >
          julia --color=yes --project=examples examples/hybrid/driver.jl --job_id diagnostic_edmfx_bomex_box
          --initial_condition Bomex --subsidence Bomex --edmf_coriolis Bomex --ls_adv Bomex --surface_setup Bomex
          --turbconv diagnostic_edmfx --edmfx_entr_detr true
          --moist equil
          --config box --hyperdiff true --kappa_4 1e8
          --x_max 1e5 --y_max 1e5 --x_elem 2 --y_elem 2 --z_elem 60 --z_max 3e3 --z_stretch false
          --dt 10secs --t_end 6hours --dt_save_to_disk 10mins
        artifact_paths: "diagnostic_edmfx_bomex_box/*"
        soft_fail: true
        agents:
          slurm_mem: 20GB
          
      - label: ":genie: Diagnostic EDMFX aquaplanet"
        command: >
          julia --color=yes --project=examples examples/hybrid/driver.jl --job_id diagnostic_edmfx_aquaplanet
          --vert_diff true --surface_setup DefaultExchangeCoefficients --rad gray
          --turbconv diagnostic_edmfx --edmfx_entr_detr true
          --moist equil --precip_model 0M
          --dt 400secs --t_end 5days --dt_save_to_disk 6hours
        artifact_paths: "diagnostic_edmfx_aquaplanet/*"
        soft_fail: true
        agents:
          slurm_mem: 20GB
      
      # - label: ":genie: Diagnostic EDMFX aquaplanet no reference state"
      #   command: >
      #     julia --color=yes --project=examples examples/hybrid/driver.jl --job_id diagnostic_edmfx_aquaplanet_noref
      #     --use_reference_state false
      #     --vert_diff true --surface_setup DefaultExchangeCoefficients --rad gray
      #     --turbconv diagnostic_edmfx --edmfx_entr_detr true
      #     --moist equil --precip_model 0M
      #     --dt 400secs --t_end 1days --dt_save_to_disk 1hours
      #   artifact_paths: "diagnostic_edmfx_aquaplanet_noref/*"
      #   soft_fail: true
      #   agents:
      #     slurm_mem: 20GB

