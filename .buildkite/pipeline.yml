agents:
  queue: central
  slurm_mem: 8G
  modules: julia/1.9.4 cuda/12.2 ucx/1.14.1_cuda-12.2 openmpi/4.1.5_cuda-12.2 nsight-systems/2023.3.1

env:
  JULIA_LOAD_PATH: "${JULIA_LOAD_PATH}:${BUILDKITE_BUILD_CHECKOUT_PATH}/.buildkite"
  OPENBLAS_NUM_THREADS: 1
  JULIA_NVTX_CALLBACKS: gc
  OMPI_MCA_opal_warn_on_missing_libcuda: 0
  JULIA_MAX_NUM_PRECOMPILE_FILES: 100
  JULIA_DEPOT_PATH: "${BUILDKITE_BUILD_PATH}/${BUILDKITE_PIPELINE_SLUG}/depot/default"
  JULIA_CPU_TARGET: 'broadwell;skylake'
  CONFIG_PATH: "config/model_configs"
  GPU_CONFIG_PATH: "config/gpu_configs/"
  PERF_CONFIG_PATH: "config/perf_configs"
  MPI_CONFIG_PATH: "config/mpi_configs"
  SLURM_KILL_BAD_EXIT: 1
  JULIA_NVTX_CALLBACKS: gc
  JULIA_CUDA_MEMORY_POOL: none
  JULIA_MPI_HAS_CUDA: "true"
  MPITRAMPOLINE_LIB: "/groups/esm/software/MPIwrapper/ompi4.1.5_cuda-12.2/lib64/libmpiwrapper.so"
  MPITRAMPOLINE_MPIEXEC: "/groups/esm/software/MPIwrapper/ompi4.1.5_cuda-12.2/bin/mpiwrapperexec"

steps:
  - label: "init :computer:"
    key: "init_cpu_env"
    command:
      - "echo $$JULIA_DEPOT_PATH"

      - echo "--- Remove MPIPreferences"
      - "rm -f ${JULIA_DEPOT_PATH}/environments/v1.9/LocalPreferences.toml"

      - echo "--- Instantiate project"
      - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project -e 'using Pkg; Pkg.precompile()'"
      - "julia --project -e 'using Pkg; Pkg.status()'"

      - echo "--- Instantiate test"
      - "julia --project=test -e 'using Pkg; Pkg.develop(path = \".\")'"
      - "julia --project=test -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=test -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=test -e 'using Pkg; Pkg.status()'"

      - echo "--- Instantiate examples"
      - "julia --project=examples -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=examples -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=examples -e 'using CUDA; CUDA.precompile_runtime()'"
      - "julia --project=examples -e 'using Pkg; Pkg.status()'"

      - echo "--- Instantiate perf"
      - "julia --project=perf -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=perf -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=perf -e 'using Pkg; Pkg.status()'"

      - echo "--- Download artifacts"
      - "julia --project=examples artifacts/download_artifacts.jl"

    agents:
      slurm_cpus_per_task: 8
      slurm_gpus: 1
    env:
      JULIA_NUM_PRECOMPILE_TASKS: 8
      JULIA_MAX_NUM_PRECOMPILE_FILES: 50

  - wait

  - group: "GPU"
    steps:

      - label: "GPU: baroclinic wave"
        key: "gpu_baroclinic_wave_rhoe"
        command: >
          julia --color=yes --project=examples examples/hybrid/driver.jl
          --config_file $PERF_CONFIG_PATH/gpu_baroclinic_wave_rhoe.yml
        artifact_paths: "gpu_implicit_barowave_ref/*"
        agents:
          slurm_gpus: 1

      - label: "GPU: GPU dry baroclinic wave"
        key: "target_gpu_implicit_baroclinic_wave"
        command:
          - mkdir -p target_gpu_implicit_baroclinic_wave
          - >
            nsys profile --trace=nvtx,cuda --output=target_gpu_implicit_baroclinic_wave/report
            julia --color=yes --project=examples examples/hybrid/driver.jl
            --config_file ${GPU_CONFIG_PATH}target_gpu_implicit_baroclinic_wave.yml
        artifact_paths: "target_gpu_implicit_baroclinic_wave/*"
        agents:
          slurm_gpus: 1

      - label: "GPU: GPU moist Held-Suarez"
        command:
          - >
            julia --color=yes --project=examples examples/hybrid/driver.jl
            --config_file $GPU_CONFIG_PATH/central_gpu_hs_rhoe_equilmoist_nz63_0M_55km_rs35km.yml
        artifact_paths: "central_gpu_hs_rhoe_equilmoist_nz63_0M_55km_rs35km/*"
        agents:
          slurm_gpus: 1
          slurm_mem: 16G

      - label: "GPU: gpu_aquaplanet_dyamond"
        command:
          - mkdir -p gpu_aquaplanet_dyamond
          - >
            nsys profile --trace=nvtx,cuda --output=gpu_aquaplanet_dyamond/report
            julia --color=yes --project=examples examples/hybrid/driver.jl
            --config_file ${GPU_CONFIG_PATH}gpu_aquaplanet_dyamond.yml
        artifact_paths: "gpu_aquaplanet_dyamond/*"
        agents:
          slurm_gpus: 1
        soft_fail: true

