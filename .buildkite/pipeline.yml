agents:
  queue: central
  slurm_mem: 8G
  modules: julia/1.8.5 cuda/11.8 ucx/1.14.1_cuda-11.8 openmpi/4.1.5_cuda-11.8 hdf5/1.12.2-ompi415 nsight-systems/2023.2.1

env:
  JULIA_LOAD_PATH: "${JULIA_LOAD_PATH}:${BUILDKITE_BUILD_CHECKOUT_PATH}/.buildkite"
  OPENBLAS_NUM_THREADS: 1
  JULIA_NVTX_CALLBACKS: gc
  OMPI_MCA_opal_warn_on_missing_libcuda: 0
  JULIA_MAX_NUM_PRECOMPILE_FILES: 100
  JULIA_DEPOT_PATH: "${BUILDKITE_BUILD_PATH}/${BUILDKITE_PIPELINE_SLUG}/depot/cpu"

steps:
  - label: "init :computer:"
    key: "init_cpu_env"
    command:
      - "echo $$JULIA_DEPOT_PATH"

      - echo "--- Configure MPI"
      - julia -e 'using Pkg; Pkg.add("MPIPreferences"); using MPIPreferences; use_system_binary()'

      - echo "--- Instantiate project"
      - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project -e 'using Pkg; Pkg.precompile()'"
      - "julia --project -e 'using Pkg; Pkg.status()'"

      - echo "--- Configure CUDA"
      # force the initialization of the CUDA runtime as it is lazily loaded by default
      - "julia --project -e 'using CUDA; CUDA.precompile_runtime()'"

      - echo "--- Instantiate test"
      - "julia --project=test -e 'using Pkg; Pkg.develop(path = \".\")'"
      - "julia --project=test -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=test -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=test -e 'using Pkg; Pkg.status()'"

      - echo "--- Instantiate examples"
      - "julia --project=examples -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=examples -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=examples -e 'using Pkg; Pkg.status()'"

      - echo "--- Instantiate perf"
      - "julia --project=perf -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=perf -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=perf -e 'using Pkg; Pkg.status()'"

      - echo "--- Download artifacts"
      - "julia --project=examples artifacts/download_artifacts.jl"

    agents:
      slurm_cpus_per_task: 8
    env:
      JULIA_NUM_PRECOMPILE_TASKS: 8
      JULIA_MAX_NUM_PRECOMPILE_FILES: 50

  - wait

  - group: "Regression tests"
    steps:

      - label: ":computer: Ensure mse tables are reset when necessary"
        command: "julia --color=yes --project=examples regression_tests/test_reset.jl"

  - group: "Gravity wave"
    steps:

      - label: ":computer: non-orographic gravity wave parameterization unit test 3d"
        command: "julia --color=yes --project=examples test/non_orographic_gravity_wave/nogw_test_3d.jl"
        artifact_paths: "nonorographic_gravity_wave_test_3d/*"
        agents:
          slurm_mem: 20GB

      - label: ":computer: non-orographic gravity wave parameterization test with MiMA output"
        command: "julia --color=yes --project=examples test/non_orographic_gravity_wave/nogw_test_mima.jl"
        artifact_paths: "nonorographic_gravity_wave_test_mima/*"
        agents:
          slurm_mem: 20GB

      - label: ":computer: non-orographic gravity wave parameterization unit test single column"
        command: "julia --color=yes --project=examples test/non_orographic_gravity_wave/nogw_test_single_column.jl"
        artifact_paths: "nonorographic_gravity_wave_test_single_column/*"

      - label: ":computer: orographic gravity wave parameterization unit test for base flux calculation"
        command: "julia --color=yes --project=examples test/orographic_gravity_wave/ogwd_baseflux.jl"
        artifact_paths: "orographic_gravity_wave_test_baseflux/*"

      - label: ":computer: orographic gravity wave parameterization unit test for 3d calculation"
        command: "julia --color=yes --project=examples test/orographic_gravity_wave/ogwd_3d.jl"
        artifact_paths: "orographic_gravity_wave_test_3d/*"

  - group: "EDMFX"
    steps:

      - label: ":genie: Diagnostic EDMFX Bomex in a box"
        command: >
          julia --color=yes --project=examples examples/hybrid/driver.jl --job_id diagnostic_edmfx_bomex_box
          --initial_condition Bomex --subsidence Bomex --edmf_coriolis Bomex --ls_adv Bomex --surface_setup Bomex
          --turbconv diagnostic_edmfx --edmfx_entr_detr true --edmfx_sgs_flux true
          --moist equil
          --config box --hyperdiff true --kappa_4 1e12
          --x_max 1e5 --y_max 1e5 --x_elem 2 --y_elem 2 --z_elem 60 --z_max 3e3 --z_stretch false
          --dt 10secs --t_end 6hours --dt_save_to_disk 10mins
        artifact_paths: "diagnostic_edmfx_bomex_box/*"
        agents:
          slurm_mem: 20GB

      - label: ":genie: Diagnostic EDMFX aquaplanet with TKE"
        command: >
          julia --color=yes --project=examples examples/hybrid/driver.jl --job_id diagnostic_edmfx_aquaplanet_tke
          --vert_diff true --surface_setup DefaultExchangeCoefficients --rad gray
          --turbconv diagnostic_edmfx --prognostic_tke true --edmfx_upwinding first_order --edmfx_entr_detr true
          --moist equil --precip_model 0M
          --dt 100secs --t_end 6hours --dt_save_to_disk 1hours
        artifact_paths: "diagnostic_edmfx_aquaplanet_tke/*"
        soft_fail: true
        agents:
          slurm_mem: 20GB
      
      - label: ":genie: Diagnostic EDMFX aquaplanet with TKE t_end 1days"
        command: >
          julia --color=yes --project=examples examples/hybrid/driver.jl --job_id diagnostic_edmfx_aquaplanet_tke_tend1d
          --vert_diff true --surface_setup DefaultExchangeCoefficients --rad gray
          --turbconv diagnostic_edmfx --prognostic_tke true --edmfx_upwinding first_order --edmfx_entr_detr true
          --moist equil --precip_model 0M
          --dt 100secs --t_end 1days --dt_save_to_disk 1hours
        artifact_paths: "diagnostic_edmfx_aquaplanet_tke_tend1d/*"
        soft_fail: true
        agents:
          slurm_mem: 20GB

  - wait: ~
    continue_on_failure: true

  - label: ":robot_face: Print new mse tables"
    command: "julia --color=yes --project=examples regression_tests/print_new_mse.jl"

  - label: ":robot_face: Print new reference counter"
    command: "julia --color=yes --project=examples regression_tests/print_new_ref_counter.jl"

  - label: ":bar_chart: Tabulate performance summary"
    command: "julia --color=yes --project=perf perf/tabulate_perf_summary.jl"

  - label: ":chart_with_downwards_trend: build history"
    command:
      - build_history main
    artifact_paths:
      - "build_history.html"

  - wait

  - label: ":robot_face: Move main results"
    command: "julia --color=yes --project=examples regression_tests/move_output.jl"
